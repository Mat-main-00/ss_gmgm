"""
2024. 03. 25.

Code for adjusting the distribution of generated label data.

The label data saved in label_epoch_*.csv, which are generated by /src/generate_data.py,
are normalized data that were processed during training.
Retrieve the mean, maximum value, and standard deviation of the data from the training dataset
and revert the data distribution back to the original data distribution.
"""
import numpy as np
import pandas as pd
import os

# Number of epochs for the model changing label distribution.
epoch_list = np.arange(30000, 55000, 5000)

base_dir = "../data"
csv_path = "../data/input_file.csv"

#######################################################################################################################
if __name__ == "__main__":

    obs_df = pd.read_csv(csv_path)

    for epoch in epoch_list:
        data_file = os.path.join(base_dir, "label_epoch_{}.csv".format(epoch))
        label_df = pd.read_csv(data_file)

        # ###################
        # magnitude
        temp = obs_df["mw"].values
        coef_1 = np.mean(temp)
        temp = temp - coef_1
        coef_2 = np.max(np.abs(temp))
        temp = temp / coef_2
        coef_3 = np.std(temp) / 0.1

        label_df["mw"] *= coef_3
        label_df["mw"] *= coef_2
        label_df["mw"] += coef_1

        # distance
        temp = obs_df["log_fault_dist"].values
        coef_1 = np.mean(temp)
        temp = temp - coef_1
        coef_2 = np.max(np.abs(temp))
        temp = temp / coef_2
        coef_3 = np.std(temp) / 0.1

        label_df["log_fault_dist"] *= coef_3
        label_df["log_fault_dist"] *= coef_2
        label_df["log_fault_dist"] += coef_1

        # PGA
        temp = obs_df["log10_pga"].values
        coef_1 = np.mean(temp)
        temp = temp - coef_1
        coef_2 = np.max(np.abs(temp))
        temp = temp / coef_2
        coef_3 = np.std(temp) / 0.1

        label_df["log10_pga"] *= coef_3
        label_df["log10_pga"] *= coef_2
        label_df["log10_pga"] += coef_1

        # shallow soil
        temp = obs_df[["log10_v5", "log10_v10", "log10_v20"]].values
        coef_1 = np.mean(temp)
        temp = temp - coef_1
        coef_2 = np.max(np.abs(temp))
        temp = temp / coef_2
        coef_3 = np.std(temp) / 0.1

        label_df["log10_v5"] *= coef_3
        label_df["log10_v5"] *= coef_2
        label_df["log10_v5"] += coef_1

        label_df["log10_v10"] *= coef_3
        label_df["log10_v10"] *= coef_2
        label_df["log10_v10"] += coef_1

        label_df["log10_v20"] *= coef_3
        label_df["log10_v20"] *= coef_2
        label_df["log10_v20"] += coef_1

        # deep soil
        temp = obs_df[["log10_z1", "log10_z14"]].values
        coef_1 = np.mean(temp)
        temp = temp - coef_1
        coef_2 = np.max(np.abs(temp))
        temp = temp / coef_2
        coef_3 = np.std(temp) / 0.1

        label_df["log10_z1"] *= coef_3
        label_df["log10_z1"] *= coef_2
        label_df["log10_z1"] += coef_1

        label_df["log10_z14"] *= coef_3
        label_df["log10_z14"] *= coef_2
        label_df["log10_z14"] += coef_1

        label_df.to_csv(data_file, index=False)
